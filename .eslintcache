[{"D:\\final\\project\\src\\index.js":"1","D:\\final\\project\\src\\reportWebVitals.js":"2","D:\\final\\project\\src\\App.js":"3","D:\\final\\project\\src\\services\\auth.service.js":"4","D:\\final\\project\\src\\components\\Home.js":"5","D:\\final\\project\\src\\components\\User.js":"6","D:\\final\\project\\src\\components\\Register.js":"7","D:\\final\\project\\src\\components\\Login.js":"8","D:\\final\\project\\src\\services\\user.service.js":"9","D:\\final\\project\\src\\services\\auth-header.js":"10","D:\\final\\project\\src\\Components\\Register.js":"11","D:\\final\\project\\src\\Components\\Home.js":"12","D:\\final\\project\\src\\Components\\Login.js":"13","D:\\final\\project\\src\\Components\\User.js":"14"},{"size":596,"mtime":1609574145811,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":2047,"mtime":1610446844986,"results":"18","hashOfConfig":"16"},{"size":742,"mtime":1610167753252,"results":"19","hashOfConfig":"16"},{"size":136,"mtime":1610095567771,"results":"20","hashOfConfig":"16"},{"size":2769,"mtime":1610442442219,"results":"21","hashOfConfig":"16"},{"size":4850,"mtime":1609914239163,"results":"22","hashOfConfig":"16"},{"size":3991,"mtime":1610090150079,"results":"23","hashOfConfig":"16"},{"size":665,"mtime":1610445985313,"results":"24","hashOfConfig":"16"},{"size":244,"mtime":1610073943522,"results":"25","hashOfConfig":"16"},{"size":4997,"mtime":1610445985192,"results":"26","hashOfConfig":"16"},{"size":382,"mtime":1610447718100,"results":"27","hashOfConfig":"16"},{"size":3926,"mtime":1610446253393,"results":"28","hashOfConfig":"16"},{"size":2885,"mtime":1610447686092,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"pj9hxp",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\final\\project\\src\\index.js",[],["63","64"],"D:\\final\\project\\src\\reportWebVitals.js",[],"D:\\final\\project\\src\\App.js",[],"D:\\final\\project\\src\\services\\auth.service.js",["65"],"\r\n\r\nconst register = (username,email,password)=>{\r\n    return fetch('/register',{\r\n        method:'POST',\r\n        body:JSON.stringify({\r\n\r\n      username:username,\r\n      email:email,\r\n      password:password\r\n\r\n\r\n        })\r\n    }).then(response=>response.json())\r\n}\r\n\r\n\r\n\r\n\r\nconst login = (email,password)=>{\r\n  return fetch('/login',{\r\n      method:'POST',\r\n      body:JSON.stringify({\r\n\r\n    email:email,\r\n    password:password\r\n\r\n\r\n      })\r\n  }).then((response) =>  response.json())\r\n}\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\n\r\nconst getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\n\r\n\r\n// console.log(Emotion)\r\nexport default {register,login,logout,getCurrentUser}\r\n\r\n\r\n","D:\\final\\project\\src\\components\\Home.js",[],["66","67"],"D:\\final\\project\\src\\components\\User.js",[],"D:\\final\\project\\src\\components\\Register.js",[],"D:\\final\\project\\src\\components\\Login.js",["68","69"],"import React, { useState, useRef } from \"react\";\r\nimport ClipLoader from \"react-spinners/DotLoader\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\n\r\nimport { css } from \"@emotion/core\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Login = (props) => {\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n \r\n  \r\n  const onChangeEmail = (e) => {\r\n    const email = e.target.value;\r\n    setEmail(email);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    setMessage(\"\");\r\n    setLoading(true);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      AuthService.login(email, password).then(\r\n        (response) => {\r\n          if (response.auth_token) {\r\n            localStorage.setItem(\"user\", JSON.stringify(response));\r\n          }\r\n          console.log(response)\r\n          if(response.status)\r\n          { props.history.push(\"/user\");\r\n          window.location.reload();\r\n        }\r\n        else\r\n           setMessage(response.msg)\r\n\r\n         setLoading(false)\r\n        },\r\n        (error) => {\r\n          setLoading(false);\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          setLoading(false);\r\n          setMessage(resMessage);\r\n        }\r\n      );\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"card card-container\">\r\n        <img\r\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n          alt=\"profile-img\"\r\n          className=\"profile-img-card\"\r\n        />\r\n\r\n        <Form onSubmit={handleLogin} ref={form}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <Input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={onChangeEmail}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <Input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={onChangePassword}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\r\n              {loading && (\r\n                <span className=\"spinner-border spinner-border-sm\"></span>\r\n              )}\r\n              <span>Login</span>\r\n            </button>\r\n          </div>\r\n\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div className=\"alert alert-danger\" role=\"alert\">\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n            \r\n\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        \r\n        </Form>\r\n\r\n        \r\n\r\n      </div>\r\n      \r\n     \r\n      \r\n    </div>\r\n\r\n   \r\n\r\n    \r\n    \r\n    \r\n  );\r\n          \r\n};\r\n\r\nexport default Login","D:\\final\\project\\src\\services\\user.service.js",["70"],"import authHeader from \"./auth-header\";\r\n\r\n\r\nconst getUserBoard = () => {\r\n  return fetch.get('/user', { headers: authHeader() });\r\n};\r\n\r\nconst getAdminBoard = () => {\r\n    return fetch.get('/admin', { headers: authHeader() });\r\n  };\r\n\r\n \r\n  const Emotion = async(start_date,end_date)=>{\r\n        const response=await fetch('/emotionGraph',{\r\n        method:'POST',\r\n        headers:authHeader(),\r\n        body:JSON.stringify({\r\n          start_date:start_date,\r\n          end_date:end_date,\r\n        \r\n  \r\n  \r\n        })\r\n       \r\n       \r\n    })\r\n    return response.json()\r\n  } \r\n  export default {\r\n  \r\n    getUserBoard,\r\n \r\n    getAdminBoard,\r\n    Emotion\r\n  }","D:\\final\\project\\src\\services\\auth-header.js",[],"D:\\final\\project\\src\\Components\\Register.js",[],"D:\\final\\project\\src\\Components\\Home.js",[],"D:\\final\\project\\src\\Components\\Login.js",[],"D:\\final\\project\\src\\Components\\User.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":45,"column":1,"nodeType":"77","endLine":45,"endColumn":54},{"ruleId":"71","replacedBy":"78"},{"ruleId":"73","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":18},{"ruleId":"80","severity":1,"message":"84","line":13,"column":7,"nodeType":"82","messageId":"83","endLine":13,"endColumn":15},{"ruleId":"75","severity":1,"message":"76","line":29,"column":3,"nodeType":"77","endLine":35,"endColumn":4},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["85"],["86"],"no-unused-vars","'ClipLoader' is defined but never used.","Identifier","unusedVar","'override' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]